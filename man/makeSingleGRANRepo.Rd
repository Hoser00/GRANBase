% Generated by roxygen2 (4.0.1): do not edit by hand
\name{makeSingleGRANRepo}
\alias{makeSingleGRANRepo}
\title{makeSingleGRANRepo}
\usage{
makeSingleGRANRepo(manifest, subRepoName, baseDir, dest_base,
  onlyBuild = NULL, cores = 3L, repo = NULL,
  scm_auth = list(bioconductor.org = c("readonly", "readonly")), ...)
}
\arguments{
\item{manifest}{Manifest to use}

\item{subRepoName}{name of the repository to build}

\item{baseDir}{base directory for the building process}

\item{dest_base}{base directory for the resulting final repository}

\item{onlyBuild}{NULL (default) or a character vector naming packages to build. If non-null, packages not listed in this vector will not be built unless they are reverse dependencies of listed packages. Packages listed here are rebuilt even if the version number hasn't changed.}

\item{cores}{integer Number of cores to use during the build and testing processes}

\item{repo}{NULL (default) or a \code{GRANRepository} object. If specified, this repository object will be used rather than creating a new one.}

\item{scm_auth}{named list. Names are regular expressions which match scm (SVN, git) repositories. Elements are character vectors providing the username and password to checkout from the repository. Default is to use readonly:readonly for bioconductor.org.}

\item{...}{Additional arguments which will be passed to \code{GRANRepository} to construct a new \code{GRANRepository} object. Ignored if \code{repo} is non-NULL.}
}
\value{
A \code{GRANRepository} object representing the created or updated repository.
}
\description{
Create or rebuild a single GRAN repository or subset of packages therin.
}
\details{
\code{makeSingleGRANRepo} creates or updates a single GRAN repository by performing the following steps:
\enumerate{
\item{Create a new GRANRepository object (if necessary) and set the \code{building} column of the manifest to \code{TRUE} for the packages to be built}
\item{Add a copy of the GRAN(Base) package to the manifest that uses the specified or newly created repository by default}
\item{Creates or updates checkouts of package source code for packages being built. If \code{onlyBuild} was NULL, any packages whose version number has not changed since the last successfull build are removed from the list of packages being built.}
\item{Searches the manifest for any packages which are reverse dependencies to the packages being built, and sets them to be built as well. (This step is skipped if all packages in the manifest are being built).}
\item{Builds tarballs of the packages whose source was successfully obtained/updated and uses them to create a temporary repository}
\item{Uses the temporary repository to install the packages which were successfully built for the temporary repository (and any dependencies) into the temporary library location for the repository. External dependencies are retreived from the Bioconductor CRAN and Bioc* repositories.}
\item{Using the libloc above, rebuilds tarballs for packages which successfully installed with vignettes and data resaving into a staging area}
\item{Performs R CMD check on the packages (tarballs) which were successfully rebuilt}
\item{Migrates the tarballs which passed check (based on the \code{checkWarnOk} and \code{checkNoteOk} settings for the repository) into the final destination repository.}
\item{Updates the manifest associated with the GRANRepo object to reflect this build cycle (lastbuilt* and lastAttempt* columns)}
\item{Creates build report from the updated manifest}
\item{Saves the manifest and the repo object}
}
}
\author{
Gabriel Becker
}

